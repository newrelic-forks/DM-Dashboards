{
  "name" : "Kubernetes Dashboard",
  "description" : "Get a high level overview of your Kubernetes instances",
  "pages" : [ {
    "name" : "Kubernetes",
    "description" : "This dashboard provides an overview of your Kubernetes platform health. Apply filters to focus on a specific cluster or namespace.",
    "widgets" : [ {
      "visualization" : {
        "id" : "viz.billboard"
      },
      "layout" : {
        "column" : 1,
        "row" : 1,
        "height" : 3,
        "width" : 4
      },
      "title" : "Resources Used",
      "rawConfiguration" : {
        "nrqlQueries" : [ {
          "accountId" : 0,
          "query" : "SELECT (average(k8s.node.cpuUsedCores) * uniqueCount(entity.name)) as 'Cores', (average(k8s.node.memoryWorkingSetBytes) * uniqueCount(entity.name)) / 1000000000 as 'Mem GB' FROM Metric  WHERE metricName IN ('k8s.node.cpuUsedCores', 'k8s.node.memoryWorkingSetBytes') UNTIL 1 minute ago"
        } ]
      }
    }, {
      "visualization" : {
        "id" : "viz.billboard"
      },
      "layout" : {
        "column" : 5,
        "row" : 1,
        "height" : 3,
        "width" : 4
      },
      "title" : "# of K8s Objects",
      "rawConfiguration" : {
        "nrqlQueries" : [ {
          "accountId" : 0,
          "query" : "SELECT uniqueCount(K8sNodeSample.entity.id) as 'Nodes', uniqueCount(K8sNamespaceSample.clusterName) as 'Clusters', uniqueCount(K8sNamespaceSample.entity.id) as 'Namespaces', uniqueCount(K8sDeploymentSample.entity.id) as 'Deployments', uniqueCount(K8sPodSample.entity.id) as 'Pods', uniqueCount(K8sContainerSample.containerID) as 'Containers' FROM Metric, K8sNamespaceSample, K8sDeploymentSample, K8sPodSample, K8sContainerSample UNTIL 1 minute ago"
        } ]
      }
    }, {
      "visualization" : {
        "id" : "viz.markdown"
      },
      "layout" : {
        "column" : 9,
        "row" : 1,
        "height" : 3,
        "width" : 4
      },
      "rawConfiguration" : {
        "text" : "::: \n **Kubernetes** \n\nThis dashboard provides an overview of your Kubernetes platform health. Apply filters to focus on a specific cluster or namespace.\n\n\n:::"
      }
    }, {
      "visualization" : {
        "id" : "viz.bar"
      },
      "layout" : {
        "column" : 1,
        "row" : 4,
        "height" : 3,
        "width" : 4
      },
      "title" : "Namespaces per Cluster",
      "rawConfiguration" : {
        "nrqlQueries" : [ {
          "accountId" : 0,
          "query" : "FROM Metric SELECT uniqueCount(k8s.namespaceName) FACET k8s.clusterName UNTIL 1 minute ago limit 100"
        } ]
      }
    }, {
      "visualization" : {
        "id" : "viz.bar"
      },
      "layout" : {
        "column" : 5,
        "row" : 4,
        "height" : 3,
        "width" : 4
      },
      "title" : "Pods by Namespace",
      "rawConfiguration" : {
        "nrqlQueries" : [ {
          "accountId" : 0,
          "query" : "FROM Metric SELECT uniqueCount(k8s.podName) as 'pod' FACET k8s.namespaceName UNTIL 1 minute ago limit 100"
        } ]
      }
    }, {
      "visualization" : {
        "id" : "viz.line"
      },
      "layout" : {
        "column" : 1,
        "row" : 7,
        "height" : 3,
        "width" : 4
      },
      "title" : "Container CPU Usage - % Used vs Limit",
      "rawConfiguration" : {
        "nrqlQueries" : [ {
          "accountId" : 0,
          "query" : "FROM Metric SELECT latest(k8s.container.cpuUsedCores)/latest(k8s.container.cpuLimitCores) * 100 as '% CPU' FACET k8s.clusterName, k8s.podName, k8s.containerName UNTIL 1 minute ago TIMESERIES limit 50"
        } ]
      }
    }, {
      "visualization" : {
        "id" : "viz.line"
      },
      "layout" : {
        "column" : 5,
        "row" : 7,
        "height" : 3,
        "width" : 4
      },
      "title" : "Container Memory Usage - % Used vs Limit",
      "rawConfiguration" : {
        "nrqlQueries" : [ {
          "accountId" : 0,
          "query" : "FROM Metric SELECT latest(k8s.container.memoryWorkingSetUtilization) as '% Memory' FACET k8s.clusterName, k8s.podName, k8s.containerName UNTIL 1 minute ago TIMESERIES limit 50"
        } ]
      }
    }, {
      "visualization" : {
        "id" : "viz.area"
      },
      "layout" : {
        "column" : 9,
        "row" : 4,
        "height" : 3,
        "width" : 4
      },
      "title" : "Container Restarts",
      "rawConfiguration" : {
        "nrqlQueries" : [ {
          "accountId" : 0,
          "query" : "FROM Metric SELECT max(k8s.container.restartCount)-min(k8s.container.restartCount) as 'Restarts' FACET k8s.clusterName, k8s.podName, k8s.containerName UNTIL 1 minute ago TIMESERIES limit 50"
        } ]
      }
    }, {
      "visualization" : {
        "id" : "viz.line"
      },
      "layout" : {
        "column" : 1,
        "row" : 10,
        "height" : 3,
        "width" : 4
      },
      "title" : "Container CPU Cores Used",
      "rawConfiguration" : {
        "nrqlQueries" : [ {
          "accountId" : 0,
          "query" : "SELECT average(k8s.container.cpuUsedCores) as 'CPU Cores Used' FROM Metric FACET k8s.clusterName, k8s.podName, k8s.containerName timeseries since 60 minutes ago UNTIL 1 minute ago limit 50"
        } ]
      }
    }, {
      "visualization" : {
        "id" : "viz.line"
      },
      "layout" : {
        "column" : 5,
        "row" : 10,
        "height" : 3,
        "width" : 4
      },
      "title" : "Container MBytes of Memory Used",
      "rawConfiguration" : {
        "nrqlQueries" : [ {
          "accountId" : 0,
          "query" : "SELECT average(k8s.container.memoryWorkingSetBytes / 1000000) as 'MB of Mem' FROM Metric FACET k8s.clusterName, k8s.podName, k8s.containerName timeseries since 60 minutes ago UNTIL 1 minute ago limit 50"
        } ]
      }
    }, {
      "visualization" : {
        "id" : "viz.area"
      },
      "layout" : {
        "column" : 9,
        "row" : 10,
        "height" : 3,
        "width" : 4
      },
      "title" : "Missing Pods by Deployment",
      "rawConfiguration" : {
        "nrqlQueries" : [ {
          "accountId" : 0,
          "query" : "SELECT latest(k8s.replicaset.podsDesired) - latest(k8s.replicaset.podsReady) as 'Missing Pods' FROM Metric since 10 minutes ago UNTIL 1 minute ago facet k8s.clusterName, k8s.deploymentName timeseries limit 50"
        } ]
      }
    }, {
      "visualization" : {
        "id" : "viz.table"
      },
      "layout" : {
        "column" : 1,
        "row" : 13,
        "height" : 3,
        "width" : 8
      },
      "title" : "Latest pods not Running by Cluster/Namespace",
      "rawConfiguration" : {
        "nrqlQueries" : [ {
          "accountId" : 0,
          "query" : "SELECT latest(k8s.status) as 'Status', max(timestamp) as 'Timestamp' FROM Metric WHERE k8s.status NOT IN ('Running', 'Succeeded') facet clusterName, namespace, podName since 10 minutes ago UNTIL 1 minute ago limit 100"
        } ]
      }
    }, {
      "visualization" : {
        "id" : "viz.line"
      },
      "layout" : {
        "column" : 9,
        "row" : 13,
        "height" : 3,
        "width" : 4
      },
      "title" : "Containers by Namespace",
      "rawConfiguration" : {
        "nrqlQueries" : [ {
          "accountId" : 0,
          "query" : "SELECT uniqueCount(containerID) FROM Metric SINCE 10 minutes AGO UNTIL 1 minute ago facet namespace TIMESERIES"
        } ]
      }
    }, {
      "visualization" : {
        "id" : "viz.table"
      },
      "layout" : {
        "column" : 1,
        "row" : 16,
        "height" : 3,
        "width" : 8
      },
      "title" : "Node Resource Consumption",
      "rawConfiguration" : {
        "nrqlQueries" : [ {
          "accountId" : 0,
          "query" : "FROM Metric SELECT latest(k8s.node.cpuUsedCores) as 'Used Cores', latest(k8s.node.memoryWorkingSetBytes) / 1000000 as 'Used Memory MB', uniqueCount(k8s.podName) as 'Pods' FACET k8s.nodeName since 10 minutes ago UNTIL 1 minute ago limit 100"
        } ]
      }
    }, {
      "visualization" : {
        "id" : "viz.line"
      },
      "layout" : {
        "column" : 9,
        "row" : 16,
        "height" : 3,
        "width" : 4
      },
      "title" : "Active Pods by Deployment",
      "rawConfiguration" : {
        "nrqlQueries" : [ {
          "accountId" : 0,
          "query" : "SELECT uniqueCount(k8s.podName) FROM Metric where k8s.status='Running' SINCE 10 minutes AGO UNTIL 1 minute ago facet k8s.clusterName, k8s.deploymentName WHERE k8s.deploymentName IS NOT NULL TIMESERIES limit 50"
        } ]
      }
    }, {
      "visualization" : {
        "id" : "viz.table"
      },
      "layout" : {
        "column" : 1,
        "row" : 22,
        "height" : 3,
        "width" : 12
      },
      "title" : "Pod Network Status",
      "rawConfiguration" : {
        "nrqlQueries" : [ {
          "accountId" : 0,
          "query" : "SELECT latest(`k8s.pod.netRxBytesPerSecond`)/1000 as 'Received KBps', latest(`k8s.pod.netTxBytesPerSecond`)/1000 as 'Transmitted KBps', latest(`k8s.pod.netErrorsPerSecond`) as 'Errors / sec' FROM Metric FACET k8s.podName since 10 minutes ago UNTIL 1 minute ago limit 100"
        } ]
      }
    }, {
      "visualization" : {
        "id" : "viz.bar"
      },
      "layout" : {
        "column" : 9,
        "row" : 19,
        "height" : 3,
        "width" : 4
      },
      "title" : "Pod Count by Node",
      "rawConfiguration" : {
        "nrqlQueries" : [ {
          "accountId" : 0,
          "query" : "SELECT uniquecount(k8s.podName) FROM Metric where status='Running' facet k8s.nodeName since 10 minutes ago UNTIL 1 minute ago"
        } ]
      }
    }, {
      "visualization" : {
        "id" : "viz.line"
      },
      "layout" : {
        "column" : 9,
        "row" : 7,
        "height" : 3,
        "width" : 4
      },
      "title" : "Volume Usage - % Used",
      "rawConfiguration" : {
        "nrqlQueries" : [ {
          "accountId" : 0,
          "query" : "FROM Metric select latest(k8s.volume.fsUsedPercent) facet k8s.podName, k8s.volumeName, k8s.pvcName timeseries"
        } ]
      }
    }, {
      "visualization" : {
        "id" : "viz.table"
      },
      "layout" : {
        "column" : 1,
        "row" : 19,
        "height" : 3,
        "width" : 8
      },
      "title" : "Volumes Usage > 90%",
      "rawConfiguration" : {
        "nrqlQueries" : [ {
          "accountId" : 0,
          "query" : "FROM Metric select latest('k8s.volume.fsUsedPercent') facet k8s.podName, k8s.volumeName, k8s.pvcName where k8s.volume.fsUsedPercent > 90 SINCE 10 minutes ago UNTIL 1 minute ago"
        } ]
      }
    } ]
  }, {
    "name" : "Kubernetes Clusters and Nodes",
    "description" : "Visualize your Kubernetes Clusters and Nodes",
    "widgets" : [ {
      "visualization" : {
        "id" : "viz.markdown"
      },
      "layout" : {
        "column" : 1,
        "row" : 1,
        "height" : 2,
        "width" : 1
      },
      "title" : "",
      "rawConfiguration" : {
        "text" : "![Kubernetes](https://upload.wikimedia.org/wikipedia/commons/thumb/3/39/Kubernetes_logo_without_workmark.svg/1200px-Kubernetes_logo_without_workmark.svg.png)"
      }
    }, {
      "visualization" : {
        "id" : "viz.table"
      },
      "layout" : {
        "column" : 2,
        "row" : 1,
        "height" : 3,
        "width" : 5
      },
      "title" : "Clusters",
      "rawConfiguration" : {
        "nrqlQueries" : [ {
          "accountId" : 0,
          "query" : "FROM Metric select uniqueCount(k8s.nodeName) as 'Nodes', filter(uniqueCount(k8s.podName), where k8s.status = 'Running') as 'Running Pods', filter(uniqueCount(k8s.podName), where k8s.status in ('Pending')) as 'Pending Pods', uniqueCount(k8s.podName) as 'Total Pods' facet k8s.clusterName since 30 minutes ago limit 1000"
        } ]
      }
    }, {
      "visualization" : {
        "id" : "viz.line"
      },
      "layout" : {
        "column" : 7,
        "row" : 1,
        "height" : 3,
        "width" : 2
      },
      "title" : "CPU Usage",
      "rawConfiguration" : {
        "nrqlQueries" : [ {
          "accountId" : 0,
          "query" : "FROM Metric SELECT average(k8s.node.cpuUsedCores) / average(k8s.node.allocatableCpuCores) * 100 AS 'CPU Util %', 100 as '100' since 30 minutes ago TIMESERIES"
        } ]
      }
    }, {
      "visualization" : {
        "id" : "viz.line"
      },
      "layout" : {
        "column" : 9,
        "row" : 1,
        "height" : 3,
        "width" : 2
      },
      "title" : "Memory Usage",
      "rawConfiguration" : {
        "nrqlQueries" : [ {
          "accountId" : 0,
          "query" : "FROM Metric SELECT average(k8s.node.memoryWorkingSetBytes) / average(k8s.node.allocatableMemoryBytes) * 100 AS 'Memory Util %', 100 as '100' since 30 minutes ago TIMESERIES"
        } ]
      }
    }, {
      "visualization" : {
        "id" : "viz.line"
      },
      "layout" : {
        "column" : 11,
        "row" : 1,
        "height" : 3,
        "width" : 2
      },
      "title" : "Disk Usage",
      "rawConfiguration" : {
        "nrqlQueries" : [ {
          "accountId" : 0,
          "query" : "SELECT average(k8s.node.fsUsedBytes) / average(k8s.node.fsCapacityBytes) * 100 AS 'Disk Util %', 100 as '100' FROM Metric since 30 minutes ago TIMESERIES"
        } ]
      }
    }, {
      "visualization" : {
        "id" : "viz.billboard"
      },
      "layout" : {
        "column" : 1,
        "row" : 3,
        "height" : 1,
        "width" : 1
      },
      "title" : "",
      "rawConfiguration" : {
        "nrqlQueries" : [ {
          "accountId" : 0,
          "query" : "FROM Metric select uniqueCount(k8s.nodeName) as 'Nodes' since 30 minutes ago"
        } ]
      }
    }, {
      "visualization" : {
        "id" : "viz.billboard"
      },
      "layout" : {
        "column" : 1,
        "row" : 4,
        "height" : 1,
        "width" : 1
      },
      "title" : "",
      "rawConfiguration" : {
        "nrqlQueries" : [ {
          "accountId" : 0,
          "query" : "FROM Metric select uniqueCount(k8s.podName) as 'Running Pods' where k8s.status = 'Running' since 30 minutes ago"
        } ]
      }
    }, {
      "visualization" : {
        "id" : "viz.table"
      },
      "layout" : {
        "column" : 2,
        "row" : 4,
        "height" : 5,
        "width" : 11
      },
      "title" : "Nodes",
      "rawConfiguration" : {
        "nrqlQueries" : [ {
          "accountId" : 0,
          "query" : "FROM Metric select filter(uniqueCount(k8s.podName), where  k8s.status = 'Running') as 'Running Pods', filter(uniqueCount(k8s.podName), where k8s.status = 'Pending') as 'Pending Pods', (average(k8s.node.cpuUsedCores) / average(k8s.node.allocatableCpuCores) * 100) as 'CPU %', (average(k8s.node.memoryWorkingSetBytes) / average(k8s.node.allocatableMemoryBytes) * 100) as 'Mem %', (average(k8s.node.fsUsedBytes) / average(k8s.node.fsCapacityBytes) * 100) as 'Disk Util %' where nodeName is not null facet nodeName limit 2000 since 30 minutes ago"
        } ]
      }
    }, {
      "visualization" : {
        "id" : "viz.billboard"
      },
      "layout" : {
        "column" : 1,
        "row" : 5,
        "height" : 1,
        "width" : 1
      },
      "title" : "",
      "rawConfiguration" : {
        "nrqlQueries" : [ {
          "accountId" : 0,
          "query" : "FROM Metric select filter(uniqueCount(k8s.podName), where k8s.status = 'Running') / filter(uniqueCount(k8s.podName), where k8s.status in ('Running','Pending')) * 100 as '% Pods Running' since 30 minutes ago"
        } ]
      }
    }, {
      "visualization" : {
        "id" : "viz.billboard"
      },
      "layout" : {
        "column" : 1,
        "row" : 6,
        "height" : 1,
        "width" : 1
      },
      "title" : "",
      "rawConfiguration" : {
        "nrqlQueries" : [ {
          "accountId" : 0,
          "query" : "FROM Metric select uniqueCount(k8s.namespaceName) as 'Namespaces' since 30 minutes ago"
        } ]
      }
    }, {
      "visualization" : {
        "id" : "viz.billboard"
      },
      "layout" : {
        "column" : 1,
        "row" : 7,
        "height" : 1,
        "width" : 1
      },
      "title" : "",
      "rawConfiguration" : {
        "nrqlQueries" : [ {
          "accountId" : 0,
          "query" : "FROM Metric select uniqueCount(k8s.deploymentName) as 'Deployments' since 30 minutes ago"
        } ]
      }
    }, {
      "visualization" : {
        "id" : "viz.markdown"
      },
      "layout" : {
        "column" : 1,
        "row" : 8,
        "height" : 1,
        "width" : 1
      },
      "title" : "",
      "rawConfiguration" : {
        "text" : "#"
      }
    } ]
  }, {
    "name" : "Kubernetes Container Restarts",
    "description" : "Container restarts are usually not a good thing. This dashboard will help identify the biggest offenders and where they are currently trying to run.",
    "widgets" : [ {
      "visualization" : {
        "id" : "viz.markdown"
      },
      "layout" : {
        "column" : 1,
        "row" : 1,
        "height" : 7,
        "width" : 3
      },
      "title" : "",
      "rawConfiguration" : {
        "text" : "# Container Restarts\n---\n![Container](https://github.com/kubernetes/community/blob/master/icons/png/resources/unlabeled/pod-128.png?raw=true)\n\nContainer restarts are **usually** not a good thing.  This dashboard will help identify the biggest offenders and where they are currently _trying_ to run."
      }
    }, {
      "visualization" : {
        "id" : "viz.table"
      },
      "layout" : {
        "column" : 4,
        "row" : 1,
        "height" : 7,
        "width" : 9
      },
      "title" : "Container Restarts",
      "rawConfiguration" : {
        "nrqlQueries" : [ {
          "accountId" : 0,
          "query" : "FROM Metric select max(k8s.container.restartCount), latest(k8s.reason) where k8s.container.restartCount[latest] > 0 order by k8s.container.restartCount facet k8s.containerName, k8s.podName, k8s.clusterName since 30 minutes ago limit 1000"
        } ]
      }
    } ]
  }, {
    "name" : "Kubernetes Pod Status",
    "description" : "This page will help you see the current status of your Kubernetes clusters",
    "widgets" : [ {
      "visualization" : {
        "id" : "viz.markdown"
      },
      "layout" : {
        "column" : 1,
        "row" : 1,
        "height" : 2,
        "width" : 1
      },
      "title" : "",
      "rawConfiguration" : {
        "text" : "![Pod](https://github.com/kubernetes/community/blob/master/icons/png/resources/labeled/pod-128.png?raw=true)"
      }
    }, {
      "visualization" : {
        "id" : "viz.billboard"
      },
      "layout" : {
        "column" : 2,
        "row" : 1,
        "height" : 2,
        "width" : 11
      },
      "title" : "Overall Pod Status",
      "rawConfiguration" : {
        "nrqlQueries" : [ {
          "accountId" : 0,
          "query" : "FROM Metric select uniqueCount(k8s.podName) as 'Total Pods', filter(uniqueCount(k8s.podName), where k8s.status = 'Running') as 'Running Pods', filter(uniqueCount(k8s.podName), where k8s.status = 'Pending') as 'Pending Pods', filter(uniqueCount(k8s.podName), where k8s.status = 'Failed') as 'Failed Pods' since 30 minutes ago"
        } ]
      }
    }, {
      "visualization" : {
        "id" : "viz.table"
      },
      "layout" : {
        "column" : 1,
        "row" : 3,
        "height" : 3,
        "width" : 5
      },
      "title" : "Pod Status by Cluster",
      "rawConfiguration" : {
        "nrqlQueries" : [ {
          "accountId" : 0,
          "query" : "FROM Metric select uniqueCount(k8s.podName) as 'Pod Count' where k8s.status is not null facet k8s.clusterName, k8s.status since 30 minutes ago limit 100"
        } ]
      }
    }, {
      "visualization" : {
        "id" : "viz.table"
      },
      "layout" : {
        "column" : 6,
        "row" : 3,
        "height" : 3,
        "width" : 7
      },
      "title" : "Latest Pending Pods",
      "rawConfiguration" : {
        "nrqlQueries" : [ {
          "accountId" : 0,
          "query" : "FROM Metric select k8s.podName, k8s.status, k8s.clusterName where k8s.status = 'Pending' since 30 minutes ago limit 1000"
        } ]
      }
    }, {
      "visualization" : {
        "id" : "viz.table"
      },
      "layout" : {
        "column" : 1,
        "row" : 6,
        "height" : 3,
        "width" : 5
      },
      "title" : "Pod OOMKills",
      "rawConfiguration" : {
        "nrqlQueries" : [ {
          "accountId" : 0,
          "query" : "SELECT count(k8s.reason) as 'OOM Kills' FROM Metric WHERE k8s.reason = 'OOMKilled' facet k8s.clusterName, k8s.podName since 30 minutes ago limit 1000"
        } ]
      }
    }, {
      "visualization" : {
        "id" : "viz.table"
      },
      "layout" : {
        "column" : 6,
        "row" : 6,
        "height" : 3,
        "width" : 7
      },
      "title" : "Latest Failed Pods",
      "rawConfiguration" : {
        "nrqlQueries" : [ {
          "accountId" : 0,
          "query" : "FROM Metric select k8s.podName, k8s.status, k8s.clusterName where k8s.status = 'Failed' since 30 minutes ago limit 1000"
        } ]
      }
    }, {
      "visualization" : {
        "id" : "viz.bar"
      },
      "layout" : {
        "column" : 1,
        "row" : 9,
        "height" : 3,
        "width" : 12
      },
      "title" : "Pods Restarts",
      "rawConfiguration" : {
        "nrqlQueries" : [ {
          "accountId" : 0,
          "query" : "SELECT max(k8s.container.restartCount) - min(k8s.container.restartCount) FROM Metric FACET k8s.podName, k8s.namespaceName"
        } ]
      }
    } ]
  }, {
    "name" : "Kubernetes Utilization",
    "description" : "This page will show you the current utilization of resources by your Kubernetes clusters",
    "widgets" : [ {
      "visualization" : {
        "id" : "viz.area"
      },
      "layout" : {
        "column" : 1,
        "row" : 1,
        "height" : 3,
        "width" : 12
      },
      "title" : "CPU Used (Cores) by Node",
      "rawConfiguration" : {
        "nrqlQueries" : [ {
          "accountId" : 0,
          "query" : "SELECT average(k8s.node.cpuUsedCores) FROM Metric FACET k8s.nodeName SINCE 60 MINUTES AGO TIMESERIES"
        } ]
      }
    }, {
      "visualization" : {
        "id" : "viz.heatmap"
      },
      "layout" : {
        "column" : 1,
        "row" : 4,
        "height" : 3,
        "width" : 8
      },
      "title" : "CPU % by Instance Type",
      "rawConfiguration" : {
        "nrqlQueries" : [ {
          "accountId" : 0,
          "query" : "SELECT histogram(host.process.cpuPercent, 100, 25) FROM Metric FACET host.instanceType"
        } ]
      }
    }, {
      "visualization" : {
        "id" : "viz.line"
      },
      "layout" : {
        "column" : 9,
        "row" : 4,
        "height" : 3,
        "width" : 4
      },
      "title" : "Memory Usage by pod, container",
      "rawConfiguration" : {
        "nrqlQueries" : [ {
          "accountId" : 0,
          "query" : "SELECT (average(k8s.container.memoryUsedBytes) / average(k8s.container.memoryLimitBytes))*100 as 'Memory Used %' FROM Metric facet k8s.podName, k8s.containerName timeseries since 60 minutes ago"
        } ]
      }
    }, {
      "visualization" : {
        "id" : "viz.heatmap"
      },
      "layout" : {
        "column" : 1,
        "row" : 7,
        "height" : 3,
        "width" : 8
      },
      "title" : "CPU % by Namespace",
      "rawConfiguration" : {
        "nrqlQueries" : [ {
          "accountId" : 0,
          "query" : "SELECT histogram(host.process.cpuPercent, 10, 100) FROM Metric FACET `containerLabel_io.kubernetes.pod.namespace`"
        } ]
      }
    }, {
      "visualization" : {
        "id" : "viz.line"
      },
      "layout" : {
        "column" : 9,
        "row" : 7,
        "height" : 3,
        "width" : 4
      },
      "title" : "MAX CPU Cores Requested by Container",
      "rawConfiguration" : {
        "nrqlQueries" : [ {
          "accountId" : 0,
          "query" : "SELECT max(k8s.container.cpuRequestedCores) FROM Metric FACET k8s.containerName SINCE 30 MINUTES AGO TIMESERIES"
        } ]
      }
    } ]
  }, {
    "name" : "Kubernetes Cluster Events",
    "description" : "Visualize Cluster Events",
    "widgets" : [ {
      "visualization" : {
        "id" : "viz.markdown"
      },
      "layout" : {
        "column" : 1,
        "row" : 1,
        "height" : 4,
        "width" : 1
      },
      "title" : "",
      "rawConfiguration" : {
        "text" : "![Logo](https://constructionlinks.ca/wp-content/uploads/2020/07/procore-logo-2020.jpg)"
      },
      "linkedEntityGuids" : null
    }, {
      "visualization" : {
        "id" : "viz.pie"
      },
      "layout" : {
        "column" : 2,
        "row" : 1,
        "height" : 4,
        "width" : 7
      },
      "title" : "Event Breakdown",
      "rawConfiguration" : {
        "nrqlQueries" : [ {
          "accountId" : 0,
          "query" : "FROM InfrastructureEvent select max(event.count) as 'Event Count' where category = 'kubernetes' and event.reason like '%Fail%' or event.reason like '%Kill%' or event.reason like '%Evict%' or event.reason like '%BackOff%' facet event.reason limit 1000 since 1 day ago"
        } ]
      },
      "linkedEntityGuids" : null
    }, {
      "visualization" : {
        "id" : "viz.billboard"
      },
      "layout" : {
        "column" : 9,
        "row" : 1,
        "height" : 2,
        "width" : 2
      },
      "title" : "Murders",
      "rawConfiguration" : {
        "nrqlQueries" : [ {
          "accountId" : 0,
          "query" : "FROM InfrastructureEvent SELECT count(event.count) as 'Murders' WHERE category = 'kubernetes' AND event.reason like '%Kill%'"
        } ]
      },
      "linkedEntityGuids" : null
    }, {
      "visualization" : {
        "id" : "viz.billboard"
      },
      "layout" : {
        "column" : 11,
        "row" : 1,
        "height" : 2,
        "width" : 2
      },
      "title" : "Backoffs",
      "rawConfiguration" : {
        "nrqlQueries" : [ {
          "accountId" : 0,
          "query" : "FROM InfrastructureEvent SELECT count(event.count) as 'Backoffs' WHERE category = 'kubernetes' AND event.reason like '%BackOff%'"
        } ]
      },
      "linkedEntityGuids" : null
    }, {
      "visualization" : {
        "id" : "viz.billboard"
      },
      "layout" : {
        "column" : 9,
        "row" : 3,
        "height" : 2,
        "width" : 2
      },
      "title" : "Evictions",
      "rawConfiguration" : {
        "nrqlQueries" : [ {
          "accountId" : 0,
          "query" : "FROM InfrastructureEvent select count(event.count) as 'Evictions' where category = 'kubernetes' AND event.reason like '%Evicted%' "
        } ]
      },
      "linkedEntityGuids" : null
    }, {
      "visualization" : {
        "id" : "viz.billboard"
      },
      "layout" : {
        "column" : 11,
        "row" : 3,
        "height" : 2,
        "width" : 2
      },
      "title" : "Pod Failures",
      "rawConfiguration" : {
        "nrqlQueries" : [ {
          "accountId" : 0,
          "query" : "FROM InfrastructureEvent select count(event.count) as 'Pod Fails' where category = 'kubernetes' AND event.reason like '%Fail%' "
        } ],
        "thresholds" : [ {
          "alertSeverity" : "CRITICAL",
          "value" : 0
        }, {
          "alertSeverity" : "WARNING",
          "value" : 0
        } ]
      },
      "linkedEntityGuids" : null
    }, {
      "visualization" : {
        "id" : "viz.table"
      },
      "layout" : {
        "column" : 1,
        "row" : 5,
        "height" : 4,
        "width" : 6
      },
      "title" : "Cluster Events",
      "rawConfiguration" : {
        "dataFormatters" : [ ],
        "facet" : {
          "showOtherSeries" : false
        },
        "nrqlQueries" : [ {
          "accountId" : 0,
          "query" : "FROM InfrastructureEvent select max(event.count) as 'Event Count', latest(event.lastTimestamp), latest(entityName) where category = 'kubernetes' and event.reason like '%Fail%' or event.reason like '%Kill%' or event.reason like '%Evict%' or event.reason like '%BackOff%' facet event.reason, clusterName, event.involvedObject.name, event.involvedObject.kind  limit 1000 since 1 day ago where clusterName = 'pixie-auto-telemetry'"
        } ]
      },
      "linkedEntityGuids" : null
    }, {
      "visualization" : {
        "id" : "viz.line"
      },
      "layout" : {
        "column" : 7,
        "row" : 5,
        "height" : 4,
        "width" : 6
      },
      "title" : "Timeseries of Kubernetes Cluster Events",
      "rawConfiguration" : {
        "facet" : {
          "showOtherSeries" : false
        },
        "legend" : {
          "enabled" : true
        },
        "nrqlQueries" : [ {
          "accountId" : 0,
          "query" : "FROM InfrastructureEvent select count(event.count) as 'Event Count' where category = 'kubernetes' and event.reason like '%Fail%' or event.reason like '%Kill%' or event.reason like '%Evict%' or event.reason like '%BackOff%' facet event.reason limit 1000 since 1 day ago TIMESERIES AUTO "
        } ],
        "yAxisLeft" : {
          "zero" : true
        }
      },
      "linkedEntityGuids" : null
    } ]
  } ]
}